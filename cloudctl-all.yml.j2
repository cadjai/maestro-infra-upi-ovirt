# Generation of Kubernetes YAML is still under development!
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
# Created with podman-1.6.4
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-07-05T18:33:06Z"
  labels:
    app: cloudctl
  name: cloudctl
spec:
  containers:
  - command:
    - nginx
    - -g
    - daemon off;
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
      value: nginx
    - name: container
      value: podman
    - name: NGINX_VERSION
      value: 1.19.0
    - name: NJS_VERSION
      value: 0.4.1
    - name: PKG_RELEASE
      value: 1~buster
    image: {{ nginx_container_image_name }} 
    name: nginx
    ports:
    - containerPort: 80
      hostPort: 8080
      protocol: TCP
    - containerPort: 2022
      hostPort: 2022
      protocol: TCP
    - containerPort: 5000
      hostPort: 5000
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
    volumeMounts:
    - mountPath: /usr/share/nginx/html:z
      name: root-platform-nginx
      readOnly: true
    workingDir: /
  - command:
    - /etc/docker/registry/config.yml
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
      value: registry
    - name: container
      value: podman
    image: {{ registry_container_image_name }}:{{ registry_container_image_tag }} 
    name: registry
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
    volumeMounts:
    - mountPath: /root/platform/mirror:z
      name: root-platform-mirror
    - mountPath: /etc/docker/registry/auth:z
      name: root-platform-secrets-registry-auth
      readOnly: false
    - mountPath: /etc/docker/registry/ssl:z
      name: root-platform-secrets-registry-ssl
      readOnly: false
    - mountPath: /etc/docker/registry/config.yml:z
      name: root-platform-mirror-config.yml
      readOnly: false
    workingDir: /
  - env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
      value: konductor
    - name: container
      value: oci
    - name: BUILDAH_ISOLATION
      value: chroot
    - name: varVerOpenshift
      value: 4.6.4
    image: {{ konductor_container_image_name }}:{{ konductor_container_image_tag }} 
    name: konductor
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: true
      readOnlyRootFilesystem: false
    volumeMounts:
    - mountPath: /root/platform:z
      name: root-platform
    workingDir: /root/platform
  volumes:
  - hostPath:
      path: /root/platform/nginx
      type: Directory
    name: root-platform-nginx
  - hostPath:
      path: /root/platform/secrets/registry/auth
      type: Directory
    name: root-platform-secrets-registry-auth
  - hostPath:
      path: /root/platform/mirror/config.yml
      type: File
    name: root-platform-mirror-config.yml
  - hostPath:
      path: /root/platform/mirror
      type: Directory
    name: root-platform-mirror
  - hostPath:
      path: /root/platform/secrets/registry/ssl
      type: Directory
    name: root-platform-secrets-registry-ssl
  - hostPath:
      path: /root/platform
      type: Directory
    name: root-platform
status: {}
