#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: ' Konductor | Provision UPI Infra | push-ocp-images-to-registry.yml' 
  hosts: localhost 
  vars_files:
    - 'vars/vault.yml'
    - 'vars/global.yml'
  vars:
    module: "registry"
    ansible_name_module: " Konductor | Provision UPI Infra | {{ module }}"
    dir_staging_location: "/data/staging"
    bundle_file: "/data/bundle/openshift-bundle.tar.xz"
    temp_container_registry_image: 'quay.io/cloudctl/registry'
  pre_tasks:
    - name: '{{ ansible_name_module }} | yum | install required packages on registry '
      become: yes
      yum:
        name:
          - tar 
          - podman
        state: present

  tasks:
    - name: Check that oc client is installed with right version
      command: "{{ openshift_client_binary }} version"
      ignore_errors: yes
      register: oc_client_installed

    - name: '{{ ansible_name_module }} | assert | ensure client is present'
      assert:
        that:
          - oc_client_installed.rc == 0
          - " not 'command not found' in oc_client_installed.stderr "
        msg: "Ensure the OC client is installed with the version required on controller"

    - name: '{{ ansible_name_module }} | file:directory | Ensure staging directory exist '
      become: yes
      file:
        path: "{{ dir_staging_location }}"
        state: directory
        mode: 0755

    - name: '{{ ansible_name_module }} | unarchive | bundle files to registry '
      become: yes
      unarchive:
        src: "{{ bundle_file }}"
        remote_src: yes
        dest: "{{ dir_staging_location }}"
        mode: 0755
      when:
        - unpack is defined
        - unpack | bool 
      register: unbundle_out

    - name: '{{ ansible_name_module }} | set_fact | registry image files load facts '
      set_fact:
        local_registry_dir: "{{ dir_staging_location }}"

    - name: '{{ ansible_name_module }} | Trust Registry CA on controller'
      become: yes
      when:
        - trust_registry_ca is defined
        - trust_registry_ca | bool
      block: 
        - name: '{{ ansible_name_module }} | Copy registry CA to /etc/pki/ca-trust/source/anchors/'
          copy:
            src: "{{ registry_ca_local_dir }}/{{ registry_ca_local_name }}"
            dest: /etc/pki/ca-trust/source/anchors/{{ registry_ca_local_name }}
            force: yes

        - name: '{{ ansible_name_module }} | command | Update the trust store'
          command: update-ca-trust extract
          register: registry_ca_trusted

    - name: '{{ ansible_name_module }} | command | generate authfile for registry'
      become: yes
      no_log: true
      command: >
        podman login -u {{ registry_admin_username }} -p {{ registry_admin_password }} \
           --authfile {{ hostvars[inventory_hostname].ansible_env.HOME }}/.docker/config.json \
           {{ registry_host_fqdn }}:{{ registry_host_port }}
      register: authfile_created

    - name: '{{ ansible_name_module }} | set_fact |  authfile for registry'
      set_fact:
        registry_auth_config: "{{ hostvars[inventory_hostname].ansible_env.HOME }}/.docker/config.json"
      when:
        - authfile_created is defined

    - name: '{{ ansible_name_module }} | file | set permission on authfile'
      become: yes
      when:
        - authfile_created is defined
      block:      
        - name: Set directory permissions
          file:
            path: "{{ registry_auth_config | dirname }}"
            state: directory
            owner: "{{ lookup('env', 'USER') }}" 
            group: "{{ lookup('env', 'USER') }}"
            mode: '0755'

        - name: Set file permissions
          file:
            path: "{{ registry_auth_config }}"
            owner: "{{ lookup('env', 'USER') }}" 
            group: "{{ lookup('env', 'USER') }}"
            mode: '0644'

    - name: '{{ ansible_name_module }} | command:oc adm | load images to registry '
      command: > 
        {{ openshift_client_binary }} image mirror \
         --registry-config={{ registry_auth_config }} \
         --from-dir={{ local_registry_dir }} \
         'file://openshift/release:{{ ocp_release_version }}-x86_64*'
          {{ registry_host_fqdn }}:{{ registry_host_port}}/{{ local_repository }} 
      when:
        - authfile_created is defined
      register: registry_loaded

