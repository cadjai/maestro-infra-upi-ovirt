---
# Ovirt Cluster Info
ovirt_url: "{{ vault_ovirt_url }}"
ovirt_username: "{{ vault_ovirt_username }}"
ovirt_password: "{{ vault_ovirt_password }}"
storage_domain_id: "{{ vault_storage_domain_id }}"
cluster_id: "{{ vault_cluster_id }}"
vm_template_id: "{{ vault_vm_template_id }}"
coreos_vm_template_id: "{{ vault_coreos_vm_template_id }}"
dns_search: "{{ vault_dns_search }}"
dns_servers: "{{ vault_dns_servers }}"
vm_user: "{{ vault_vm_user }}"
vm_rootpw: "{{ vault_vm_rootpw }}"
host_subdomain: "{{ vault_host_subdomain }}"
additional_disks: []
attach_additional_disks: true
vm_memory: 16
vm_cpu_cores: 1 
vm_cpu_sockets: 4
custom_script: "omit"
ignition_url: "omit"
metadata_json_file: "/home/claude/deploy/cluster/metadata.json"
metadata_json_data: "{{ lookup('file', metadata_json_file) }}"

# Vm Instances to build
provision_dhcp: false
provision_dns: false
provision_lb: true
provision_registry: true
authorized_ssh_key: "{{ sshkeys_pub_string }}"
#Vm to skip
vm_skip_list:
  - localhost

# DNS Info
base_domain: '{{ vault_base_domain }}'
nic_boot_proto: 'dhcp'

#####################################################################################################
# End of user configurable variables
#####################################################################################################
# OpenShift Version
version_openshift: "{{ lookup('env', 'varVerOpenshift') }}"
# openshift-install binary to run
openshift_install_binary: /usr/local/bin/openshift-install 
openshift_client_binary: /usr/local/bin/oc 

# Bash ENV Lookups
local_home: "{{ lookup('env', 'HOME') }}"
local_user: "{{ lookup('env', 'USER') }}"

# Ansible Playbook Run Variables
name_vendor: "RedHat"
ansible_name: " {{ name_vendor }} | Konductor | Infra Automation"
ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

# Directory Inventory
dir_deploy: "{{ local_home }}/deploy"
dir_images: "{{ dir_deploy }}/images"
dir_secrets: "{{ dir_deploy }}/secrets"
dir_cluster: "{{ dir_deploy }}/cluster"
dir_install: "{{ dir_deploy }}/install"
dir_ansible: "{{ dir_deploy }}/ansible"
dir_terraform: "{{ dir_deploy }}/terraform"

# Hosts Environment 
remote_home: "{{ ansible_env.HOME }}"

# Linux Container Pull Secrets
registry_auth_file: "{{ dir_secrets }}/docker/config.json }}"

# SSH Keys
sshkeys_priv_file: "{{ local_home }}/.ssh/id_rsa_cluster_deploy"
sshkeys_priv_string: "{{ lookup('file', '{{ sshkeys_priv_file }}') }}"
sshkeys_pub_file: "{{ local_home }}/.ssh/id_rsa_cluster_deploy.pub"
sshkeys_pub_string: "{{ lookup('file', '{{ sshkeys_pub_file }}') }}"


# Repo Config
use_statellite: false
satellite_server: ''
yum_repo_file: 'files/yum.repo'

# DNS Client Config
ipaclient_servers:  "{{ vault_ipaclient_servers }}"
ipaclient_install_packages: "{{ vault_ipaclient_install_packages }}"
ipaadmin_principal: "{{ vault_ipaadmin_principal }}"
ipaadmin_password: "{{ vault_ipaadmin_password }}"
ipaserver_domain: "{{ vault_ipaserver_domain }}"
ipaclient_domain: "{{ vault_ipaclient_domain }}"
ipaserver_realm: "{{ vault_ipaserver_realm }}"
ipaclient_ca_cert_file: 'files/ipa-ca.crt'
ipaclient_hostname: "{{ vault_ipaclient_hostname }}"

# Load balancer Config
kube_api_port: 6443
machine_config_server_port: 22623

#registry_host_fqdn: '{{ vault_registry_host_fqdn }}'
registry_host_fqdn: "{{ vault_registry_host_fqdn }}"
registry_secret: "{{ vault_registry_secret }}"
registry_admin_username: "{{ vault_registry_admin_username }}"
registry_admin_password: "{{ vault_registry_admin_password }}"
secure_registry: true
enable_authz_on_registry: true
generate_selfsigned_registry_certfiles: true
use_containeried_registry: true
provision_nginx: true
ign_repos_name: 'ign-repos'
ign_iso_repos_name: 'rhcos-isos'
nginx_root_directory: "/opt/rh/rh-nginx116/root/usr/share/nginx/html"
nginx_conf: "/etc/opt/rh/rh-nginx116/nginx/nginx.conf"

# OCP Cluster Config
ocp_cluster_name: '{{ vault_ocp_cluster_name }}'
ocp_cluster_basedomain: '{{ vault_ocp_cluster_basedomain }}'
ocp_hosts_cidr: '{{ vault_ocp_hosts_cidr }}'
ocp_registry_pull_secret_file: 'files/quay-pull-secret.json'
local_repository: 'openshift4'
registry_host_port: '5000'
registra_ca_local_dir: "{{ dir_deploy }}/registry"
registry_ca_local_name: "registry-ca.crt"
ignition_file_hosting_url: "http://{{ registry_host_fqdn }}"
ocp_master_count: 3
ocp_worker_count: 2
rhcos_template_image_name: "rhcos-live.x86_64.iso"
#rhcos_template_image_name: "rhcos-openstack.x86_64.qcow2"
rhcos_image_mirror: "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos"
rhcos_image_version_major: "4.6"
rhcos_image_version_minor: "latest"
rhcos_image_iso_names: 
  - "rhcos-openstack.x86_64.qcow2.gz"
  - "rhcos-live.x86_64.iso"
rhcos_image_url: "http://{{ nginx_hosts[0] | d(groups.newregistry[0]) }}.{{ ocp_cluster_basedomain }}/{{ ign_iso_repos_name }}/{{ ocp_release_version }}/{{ rhcos_template_image_name }}"
create_rhcos_template: false
#create_rhcos_template: true
#oc_client_binary: "files/oc.tar.gz"
oc_client_binary: "files/openshift-client-linux-4.6.4.tar.gz"
ocp_release_version: 4.6.4
host_rhcos_images: false
ignition_spec_version: "3.1.0"
registry_container_auth_dir: '/auth'
registry_container_cert_dir: '/certs'
dir_bundle_location: "/data/bundle"
registry_container_name: 'mirror-registry'
registry_container_image: 'docker.io/library/registry:2'
registry_container_dir: '/var/lib/registry'
install_opm: "false"
opm_client_binary: "files/opm"
install_grpcurl: "false"
grpcurl_binary: "files/grpcurl_1.7.0_linux_x86_64.tar.gz"
operator_registres_to_mirror:
  redhat-operators:
    source: registry.redhat.io/redhat/redhat-operator-index:v4.6
    container_port: 50051
    mirrored_operator_list: "3scale-operator,apicast-operator,amq-streams,businessautomation-operator,cluster-kube-descheduler-operator,cluster-logging,clusterresourceoverride,codeready-workspaces,compliance-operator,container-security-operator,elasticsearch-operator,file-integrity-operator,jaeger-product,kiali-ossm,kubevirt-hyperconverged,local-storage-operator,metering-ocp,nfd,ocs-operator,ptp-operator,rhsso-operator,serverless-operator,servicemeshoperator,sriov-network-operator"
default_operator_registry_username: "{{ vault_default_operator_registry_username }}"
default_operator_registry_password: "{{ vault_default_operator_registry_password }}"
default_operator_registry: 'quay.io'
