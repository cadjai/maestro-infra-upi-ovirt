---
# tasks file for configure-drive---
- name: '{{ ansible_name_module }} | yum | install required packages on host'
  become: yes
  yum:
    name: 'lvm2'
    state: present

- name: '{{ ansible_name_module }} | setup | gather disks facts from host'
  become: yes
  shell: lsblk | tail -n -{{ hostvars[inventory_hostname].additional_disks | length }}
  register: disks

- name: '{{ ansible_name_module }} | lvg | create volume groups'
  become: yes
  lvg:
    vg: "{{ item.name }}-vg"
    pvs: "/dev/{{ disks.stdout_lines[cnt].split('  ')[0] }}"
    pesize: 128k
    pv_options: '-Z y'
    force: no
    state: present
  loop: "{{ hostvars[inventory_hostname].additional_disks }}"
  loop_control:
    index_var: cnt
  when:
    - hostvars[inventory_hostname].additional_disks | d([]) | length > 0
  register: vg_created

- name: '{{ ansible_name_module }} | lvol | create logical volumes '
  become: yes
  lvol:
    vg: "{{ item.name }}-vg"
    lv: "{{ item.name }}_vol"
    pvs: "/dev/{{ disks.stdout_lines[cnt].split('  ')[0] }}"
    size: 100%FREE
    active: yes
    force: no
    state: present
  loop: "{{ hostvars[inventory_hostname].additional_disks }}"
  loop_control:
    index_var: cnt
  when:
    - hostvars[inventory_hostname].additional_disks | d([]) | length > 0
  register: lv_created

- name: '{{ ansible_name_module }} | filesystem | create filesystem on logical volumes '
  become: yes
  filesystem:
    fstype: "{{ fstype | d('xfs', true) }}"
    dev: "/dev/mapper/{{ item.name }}--vg-{{ item.name }}_vol"
    force: no
  loop: "{{ hostvars[inventory_hostname].additional_disks }}"
  loop_control:
    index_var: cnt
  when:
    - hostvars[inventory_hostname].additional_disks | d([]) | length > 0
  register: fs_created

- name: '{{ ansible_name_module }} | file:directory | ensure mount point exist for filesystem on logical volumes '
  become: yes
  file:
    path: "{{ item.mount }}"
    state: directory
    mode: '0755'
  loop: "{{ hostvars[inventory_hostname].additional_disks }}"
  loop_control:
    index_var: cnt
  when:
    - hostvars[inventory_hostname].additional_disks | d([]) | length > 0
  register: mp_created

- name: '{{ ansible_name_module }} | mount | ensure filesystem on logical volumes is mounted '
  become: yes
  mount:
    path: "{{ item.mount }}"
    src: "/dev/mapper/{{ item.name }}--vg-{{ item.name }}_vol"
    opts: defaults
    state: mounted
    fstype: "{{ fstype | d('xfs', true) }}"
  loop: "{{ hostvars[inventory_hostname].additional_disks }}"
  loop_control:
    index_var: cnt
  when:
    - hostvars[inventory_hostname].additional_disks | d([]) | length > 0
  register: fs_mounted

