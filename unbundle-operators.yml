#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: ' Konductor | Provision UPI Infra | unbundle-operators.yml' 
  hosts: localhost 
  become: yes
  vars_files:
    - 'vars/vault.yml.claude'
    - 'vars/global.yml'
  vars:
    module: "registry"
    ansible_name_module: " Konductor | Provision UPI Infra | {{ module }}"
  pre_tasks:
    - name: '{{ ansible_name_module }} | yum | install required packages on registry '
      yum:
        name:
          - tar 
          - podman
          - jq
          - lzma
          - python-backports-lzma
          - xz-devel
        state: present
      when:
        - not inventory_hostname in ['localhost', 'local']

  tasks:
    - name: '{{ ansible_name_module }} | file:directory | Ensure the images directory exist'
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ dir_bundle_staging }}"

    - name: '{{ ansible_name_module }} | Process operator bundle | on registry '
      block: 
        - name: '{{ ansible_name_module }} | file:directory | Ensure the staging directory exist'
          file:
            path: "{{ dir_bundle_staging }}"
            state: directory
            mode: 0755

        - name: '{{ ansible_name_module }} | copy | operator bundles files to registry '
          copy:
            src: "{{ bundle_file_location }}"
            dest: "{{ dir_bundle_staging }}/{{ bundle_file_location | basename }}"
            mode: 0777
            force: yes
          when:
            - not inventory_hostname in ['localhost', 'local']
          register: op_bundle_copied

        - name: '{{ ansible_name_module }} | set_fact | bundle file location facts '
          set_fact:
            local_bundle_dir: "{{ dir_bundle_staging if not inventory_hostname in ['localhost', 'local'] else bundle_file_location | dirname }}"

        - name: '{{ ansible_name_module }} | unarchive:xz | original operator bundle on registry '
          unarchive:
            src: "{{ local_bundle_dir }}/{{ bundle_file_location | basename }}"
            remote_src: yes
            dest: "{{ dir_bundle_staging }}"
            mode: 0755
          register: op_unbundle_out

        - name: '{{ ansible_name_module }} | set_fact | registry image files load facts '
          set_fact:
            local_registry_dir: "{{ dir_bundle_staging }}/docker/registry/v2"

        - name: '{{ ansible_name_module }} | command | generate authfile for registry'
          no_log: true
          command: > 
            podman login -u {{ registry_admin_username }} -p {{ registry_admin_password }} \
               --authfile {{ hostvars[inventory_hostname].ansible_env.HOME }}/.docker/config.json \
               {{ registry_host_fqdn }}:{{ registry_host_port }}
          register: authfile_created

        - name: '{{ ansible_name_module }} | set_fact |  authfile for registry'
          set_fact:
            registry_auth_config: "{{ hostvars[inventory_hostname].ansible_env.HOME }}/.docker/config.json"
          when:
            - authfile_created is defined


        - name: '{{ ansible_name_module }} | jq | generate combined authfile for registry'
          shell: > 
            jq -c --argjson \
              var "$(jq .auths {{ hostvars[inventory_hostname].ansible_env.HOME }}/.docker/config.json)" \
              '.auths += $var' {{ ocp_registry_pull_secret_file }} \ 
              | jq '.' > {{ dir_bundle_staging }}/ocp-registry.json

        - name: '{{ ansible_name_module }} | command:oc adm | load images to registry '
          command: > 
            oc adm catalog mirror localhost:5000/{{ source_repository | d('redhat') }}/{{ source_operator_index | d('redhat-operator-index') }}:{{ source_operator_index_tag | d('v4.6') }} \
             {{ registry_host_fqdn }}:{{ registry_host_port }}/{{ local_olm_repository }} \
            -a {{ dir_bundle_staging }}/operators-registry.json \
             --filter-by-os="linux/amd64" \
             --insecure=true
          when:
            - authfile_created is defined
          register: registry_loaded

        - name: '{{ ansible_name_module }} | file:absent | bundles staging directories'
          file:
            state: absent 
            path: "{{ item }}"
          with_items: 
            - "{{ dir_bundle_staging }}"
          when:
            - registry_loaded is defined
            - registry_loaded.changed | bool
            - not registry_loaded.failed | bool
